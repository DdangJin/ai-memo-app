# 📝 PRD: **Memora** – AI 음성 메모장 웹서비스

---

## 1. 제품 개요 (Overview)

**제품명:** Memora  
**제품 유형:** AI 기반 웹 메모 애플리케이션  
**서비스 형태:** 웹 애플리케이션 (Web-based Service)  
**개발 기술 스택:** Next.js 14, TypeScript, TailwindCSS, Supabase, Drizzle ORM, Anthropic Claude API, Vercel

### 🧩 개발 배경 및 문제 정의

기존 메모 서비스는 사용자의 메모를 단순 저장하는 데 그치는 경우가 많아, 시간이 지날수록 중요한 정보를 찾기 어렵고 효율적인 활용이 어려워집니다. 특히 회의록, 아이디어, 공부 내용 등 다양한 형태의 메모를 빠르게 작성하고 구조화하는 것이 점점 더 중요해지고 있습니다.

**Memora**는 **AI 메모장 웹서비스**로, 사용자의 음성 또는 텍스트 입력을 받아 **AI가 자동으로 요약 및 분류**해주는 기능을 제공합니다. **STT(Speech-to-Text) 기술**을 통해 빠른 음성 메모 작성이 가능하며, 모든 데이터는 **웹 애플리케이션의 데이터베이스에 저장**됩니다.

### 🎯 제공 가치 및 핵심 혜택

* **AI 요약**: 긴 메모를 간결한 핵심 요약으로 제공하여 빠른 정보 파악
* **카테고리 분류**: 자동 분류 기능을 통한 체계적인 메모 정리
* **STT 기반 음성 입력**: 빠른 음성 기반 메모 작성으로 효율성 증대
* **웹 접근성**: 설치 없이 브라우저에서 사용 가능한 범용성
* **실시간 협업**: 메모 공유 및 실시간 편집 기능
* **고급 검색**: 태그, 날짜, 카테고리 기반의 정교한 검색 기능

---

## 2. 핵심 기능 (Core Features)

### 📝 텍스트 메모 작성
- **기능**: 사용자가 직접 웹에서 텍스트 입력
- **중요성**: 기본적인 메모 작성의 핵심 기능
- **동작 방식**: 리치 텍스트 에디터를 통한 직관적인 메모 작성

### 🎤 음성 입력 (STT 변환)
- **기능**: 마이크 입력을 실시간 텍스트로 변환
- **중요성**: 빠른 메모 작성과 접근성 향상
- **동작 방식**: Web Speech API를 활용한 브라우저 내 음성 인식

### 🤖 AI 요약
- **기능**: 긴 메모 내용을 간결하게 요약
- **중요성**: 정보의 빠른 파악과 효율적인 메모 관리
- **동작 방식**: Anthropic Claude API를 활용한 자연어 처리

### 🏷️ 자동 카테고리 분류
- **기능**: 메모 내용을 주제 기반으로 자동 분류
- **중요성**: 체계적인 메모 정리와 검색 효율성 증대
- **동작 방식**: AI 기반 콘텐츠 분석을 통한 자동 태깅

### 🔍 검색 기능
- **기능**: 키워드, 작성일, 카테고리별 검색 가능
- **중요성**: 대량의 메모에서 원하는 정보 빠른 검색
- **동작 방식**: Supabase Full-Text Search와 필터링 조합

### 👥 실시간 협업
- **기능**: 메모 공유 및 실시간 편집
- **중요성**: 팀워크와 정보 공유의 효율성 증대
- **동작 방식**: Supabase Realtime을 활용한 실시간 동기화

---

## 3. 사용자 경험 (User Experience)

### 👥 사용자 페르소나

#### 👩‍💼 직장인 / 프리랜서
- **특징**: 회의나 작업 중 빠른 메모 작성 필요
- **요구사항**: 웹에서 빠르게 메모하고 자동 정리되길 원함
- **사용 시나리오**: 회의 내용 음성 녹음 → AI 요약 → 카테고리 분류

#### 🎓 대학생
- **특징**: 수업 내용 기록 및 정리 필요
- **요구사항**: 노트북을 통한 수업 내용 음성/텍스트 기록
- **사용 시나리오**: 강의 녹음 → 텍스트 변환 → AI 요약 → 카테고리 분류

#### 👨‍👩‍👧‍👦 일반 사용자
- **특징**: 일상적인 메모 작성 및 관리
- **요구사항**: 웹에서 손쉽게 일상 메모 작성
- **사용 시나리오**: 아이디어 메모 → 자동 분류 → 필요시 검색

### 🔄 핵심 사용자 플로우

#### 시나리오 1: 웹에서 회의 내용을 음성으로 메모
1. 사용자가 웹 앱 실행 및 로그인
2. '새 메모' 버튼 클릭 → 음성 녹음 시작
3. STT 기술로 실시간 텍스트 변환
4. 메모 저장 시, 자동으로 AI 요약 및 카테고리 분류
5. 전체 메모와 요약본이 웹 화면에 동시 표시
6. 데이터는 자체 데이터베이스에 저장되어 웹에서 언제든지 확인 가능

#### 시나리오 2: 텍스트 메모 작성 및 AI 처리
1. 사용자가 텍스트 에디터에서 메모 작성
2. 저장 버튼 클릭 시 자동 AI 요약 및 분류
3. 요약 결과와 카테고리 태그 표시
4. 필요시 수동 카테고리 수정 가능

### 🎨 UI/UX 고려사항

- **반응형 디자인**: 모바일, 태블릿, 데스크톱 모든 기기 지원
- **접근성**: WCAG 2.1 AA 준수로 모든 사용자 접근 보장
- **직관적 인터페이스**: 최소한의 학습으로 사용 가능한 UI
- **실시간 피드백**: AI 처리 상태와 진행 상황 실시간 표시

---

## 4. 기술 아키텍처 (Technical Architecture)

### 🏗️ 시스템 구성 요소

#### 프론트엔드 & 백엔드 (Frontend & Backend)
- **Next.js 14**: React 기반 풀스택 프레임워크
- **TypeScript**: 타입 안전성과 개발 효율성
- **React**: 사용자 인터페이스 구축
- **Next.js API Routes**: 백엔드 API 엔드포인트

#### 스타일링 (Styling)
- **TailwindCSS**: 유틸리티 기반 CSS 프레임워크
- **반응형 디자인**: 모바일, 태블릿, 데스크톱 지원
- **WCAG 2.1 AA**: 웹 접근성 표준 준수

#### 데이터베이스 (Database)
- **Supabase**: PostgreSQL 기반 BaaS 플랫폼
- **Drizzle ORM**: 타입 안전한 데이터베이스 접근
- **PostgreSQL**: 관계형 데이터베이스
- **Row Level Security (RLS)**: 데이터 접근 제어

#### AI 서비스 (AI Services)
- **Anthropic Claude API**: AI 요약 및 분류 처리
- **프롬프트 엔지니어링**: AI 모델 최적화
- **토큰 관리**: API 사용량 최적화

#### 음성 처리 (Voice Processing)
- **Web Speech API**: 브라우저 내 음성 인식
- **MediaRecorder API**: 오디오 녹음
- **STT (Speech-to-Text)**: 음성-텍스트 변환

#### 실시간 기능 (Real-time Features)
- **Supabase Realtime**: 실시간 데이터 동기화
- **WebSocket**: 실시간 통신

#### 검색 & 필터링 (Search & Filtering)
- **Supabase Full-Text Search**: 전문 검색
- **GIN 인덱스**: 검색 성능 최적화
- **태그 기반 필터링**: 메타데이터 기반 검색

#### 배포 & 인프라 (Deployment & Infrastructure)
- **Vercel**: 프론트엔드 배포 및 호스팅
- **Edge Cache**: 글로벌 성능 최적화
- **성능 모니터링**: 애플리케이션 성능 추적

### 📊 데이터 모델

#### 사용자 관리 (User Management)
```sql
-- auth.users (Supabase 기본 테이블)
-- public.profiles (사용자 프로필 확장)
```

#### 메모 관리 (Memo Management)
```sql
-- public.memos (메모 데이터)
-- public.memo_shares (메모 공유 관계)
-- public.memo_categories (카테고리 정보)
```

### 🔌 API 및 통합

#### RESTful API 엔드포인트
- `GET /api/memos` - 메모 목록 조회
- `POST /api/memos` - 새 메모 생성
- `PUT /api/memos/:id` - 메모 수정
- `DELETE /api/memos/:id` - 메모 삭제
- `POST /api/memos/:id/summarize` - AI 요약
- `POST /api/memos/:id/classify` - 카테고리 분류

#### 실시간 기능
- Supabase Realtime을 통한 실시간 협업
- WebSocket 기반 실시간 업데이트

### 🔒 보안 및 인증

- **Supabase Auth**: 이메일/비밀번호, 소셜 로그인
- **Row Level Security (RLS)**: 데이터 접근 제어
- **API 키 관리**: 환경 변수를 통한 안전한 API 키 관리

---

## 5. 개발 로드맵 (Development Roadmap)

### 🚀 MVP (Minimum Viable Product) - Phase 1

#### 기본 인프라 구축
- Next.js 14 프로젝트 초기화 (TypeScript, TailwindCSS)
- Supabase 데이터베이스 스키마 설계 및 구축
- 사용자 인증 시스템 구현 (Supabase Auth)

#### 핵심 기능 구현
- 기본 UI 컴포넌트 및 레이아웃 개발
- 메모 CRUD 기능 구현 (Drizzle ORM)
- 메모 목록 및 상세 페이지 개발
- 기본 검색 기능 (Supabase Full-Text Search)

#### AI 기능 통합
- Anthropic Claude API 통합
- AI 요약 기능 구현
- 자동 카테고리 분류 기능 구현
- AI 처리 상태 관리 시스템

### 🎯 기능 확장 - Phase 2

#### 음성 입력 기능
- Web Speech API 통합
- 음성 녹음 인터페이스 개발
- 실시간 음성-텍스트 변환

#### 고급 검색 및 필터링
- 태그 기반 검색
- 날짜 범위 필터링
- 카테고리별 필터링
- 고급 Supabase Full-Text Search

#### 협업 기능
- 메모 공유 기능
- 실시간 협업 편집
- 사용자 존재 감지

### 📊 분석 및 최적화 - Phase 3

#### 사용자 통계 및 분석
- 사용 패턴 분석 대시보드
- 메모 생성 통계
- 사용자 참여도 분석

#### 성능 최적화
- 코드 분할 및 지연 로딩
- 이미지 최적화
- Vercel Edge Cache 활용

#### 접근성 및 품질
- WCAG 2.1 AA 준수
- 포괄적인 테스트 구현
- 성능 모니터링

### 🔄 데이터 관리 - Phase 4

#### 백업 및 복원
- 메모 데이터 내보내기/가져오기
- 전체 백업 및 복원 기능
- 데이터 마이그레이션 도구

#### 고급 기능
- 메모 템플릿 시스템
- 자동 백업 스케줄링
- 고급 분석 및 인사이트

---

## 6. 논리적 의존성 체인 (Logical Dependency Chain)

### 🏗️ 기반 구축 (Foundation First)
1. **Next.js 14 프로젝트 초기화** - 모든 개발의 기반
2. **Supabase 데이터베이스 스키마** - 데이터 구조 정의
3. **사용자 인증 시스템** - 보안 및 개인화의 기반

### 🎯 빠른 사용 가능한 프론트엔드 (Quick Usable Frontend)
4. **기본 UI 컴포넌트** - 사용자 인터페이스 기반
5. **메모 CRUD 기능** - 핵심 기능 구현
6. **메모 목록 및 상세 페이지** - 사용자 경험 제공

### 🤖 AI 기능 통합 (AI Integration)
7. **Anthropic Claude API 통합** - AI 기능의 기반
8. **AI 요약 및 분류** - 핵심 가치 제공
9. **AI 처리 상태 관리** - 사용자 경험 최적화

### 🔍 검색 및 필터링 (Search & Filtering)
10. **기본 검색 기능** - 정보 발견성 향상
11. **고급 검색 기능** - 정교한 검색 경험

### 🎤 음성 입력 (Voice Input)
12. **Web Speech API 통합** - 음성 입력 기반
13. **음성 녹음 인터페이스** - 완전한 음성 메모 경험

### 👥 협업 기능 (Collaboration)
14. **메모 공유 기능** - 협업 기반
15. **실시간 협업** - 완전한 협업 경험

### 📊 분석 및 최적화 (Analytics & Optimization)
16. **사용자 통계 대시보드** - 인사이트 제공
17. **성능 최적화** - 확장성 확보
18. **접근성 준수** - 포용적 디자인

### 🔄 데이터 관리 (Data Management)
19. **데이터 내보내기/가져오기** - 데이터 포터빌리티
20. **고급 기능** - 완전한 제품 경험

---

## 7. 위험 요소 및 완화 방안 (Risks and Mitigations)

### 🔧 기술적 도전 과제

#### AI API 의존성 위험
- **위험**: Anthropic Claude API 장애 시 서비스 중단
- **완화 방안**: 
  - API 응답 시간 모니터링
  - 대체 AI 서비스 백업 계획
  - 오프라인 모드 지원

#### 음성 인식 정확도
- **위험**: Web Speech API의 언어별 정확도 차이
- **완화 방안**:
  - 다중 언어 지원
  - 수동 편집 기능 강화
  - 음성 품질 가이드 제공

#### 실시간 협업 충돌
- **위험**: 동시 편집 시 데이터 충돌
- **완화 방안**:
  - 충돌 해결 알고리즘 구현
  - 사용자 알림 시스템
  - 버전 관리 기능

### 🎯 MVP 범위 관리

#### 기능 범위 확장 위험
- **위험**: MVP 범위가 너무 커져서 개발 지연
- **완화 방안**:
  - 명확한 MVP 정의
  - 우선순위 기반 개발
  - 반복적 배포 전략

#### 사용자 피드백 부족
- **위험**: 실제 사용자 피드백 없이 개발 진행
- **완화 방안**:
  - 조기 베타 테스터 모집
  - 사용자 행동 분석 도구
  - 정기적인 사용자 인터뷰

### 💰 리소스 제약

#### 개발 리소스 부족
- **위험**: 개발 속도 지연
- **완화 방안**:
  - 명확한 개발 로드맵
  - 우선순위 기반 작업 계획
  - 외부 개발자 고려

#### 인프라 비용
- **위험**: 사용자 증가 시 비용 급증
- **완화 방안**:
  - 비용 모니터링 시스템
  - 효율적인 리소스 사용
  - 사용량 기반 요금제 고려

---

## 8. 부록 (Appendix)

### 📚 연구 결과

#### 시장 조사
- 기존 메모 앱의 한계점 분석
- AI 기반 메모 서비스 시장 동향
- 사용자 요구사항 조사 결과

#### 기술 검토
- Web Speech API 브라우저 지원 현황
- AI API 성능 및 비용 비교
- 실시간 협업 기술 비교

### 🔧 기술 명세

#### 성능 요구사항
- 페이지 로딩 시간: 3초 이내
- AI 처리 시간: 10초 이내
- 실시간 업데이트 지연: 1초 이내

#### 보안 요구사항
- 데이터 암호화 (전송 및 저장)
- 사용자 인증 및 권한 관리
- API 키 보안 관리

#### 접근성 요구사항
- WCAG 2.1 AA 준수
- 키보드 네비게이션 지원
- 스크린 리더 호환성

### 📈 성공 지표 (KPI)

#### 사용자 참여도
- 일일 활성 사용자 (DAU)
- 메모 생성 빈도
- AI 기능 사용률

#### 기술적 성능
- 페이지 로딩 속도
- AI 처리 성공률
- 시스템 가동률

#### 비즈니스 지표
- 사용자 유지율
- 기능별 사용률
- 사용자 만족도

---

## ✅ 결론 및 향후 과제

Memora는 브라우저 기반에서 음성과 텍스트로 빠르게 메모하고, AI가 자동으로 요약 및 분류해주는 웹 메모장입니다. 초기 버전에서는 핵심 기능인 **STT 기반 음성 메모**, **AI 요약**, **카테고리 분류**에 집중하고, 사용자 피드백을 바탕으로 검색 고도화 및 시각화 통계 기능을 순차적으로 확장할 예정입니다.

이 PRD는 개발팀이 명확한 방향성을 가지고 단계적으로 기능을 구현할 수 있도록 체계적으로 구성되었으며, 각 단계별로 사용자에게 가치를 제공하면서 점진적으로 제품을 발전시켜 나갈 수 있는 로드맵을 제시합니다.